install.packages("dplyr")
jablow <- read.csv2("input/jablow_calosc.csv")
setwd("~/R/gacki_analiza")
jablow <- read.csv2("input/jablow_calosc.csv")
kody <- jablow$Event_V
jablow <- read.csv2("input/jablow_calosc.csv", as.is = TRUE)
kody <- jablow$Event_V
install.packages("lubridate")
kody <- jablow$Event_V
??"regular expression"
regexpr("/", kody)
?regexpt
?regexpr
kody
kody[1:40]
kody[41:80]
kody[81:180]
kody[3400:3429]
kody[3421]
regexpr("/", kody[3421])
regexpr("/", kody[3421:])
regexpr("/", kody[3421:3429])
kody[3421:3429]
regexpr("/", kody[3411:3429])
do_pociecia <- which(regexpr("/", kody)>0)
do_pociecia
nowe_obserwacje <- jablow[1c(1:length(jablow[,1]))]
nowe_obserwacje <- jablow[-c(1:length(jablow[,1]),)]
nowe_obserwacje <- jablow[-c(1:length(jablow[,1],))]
nowe_obserwacje <- jablow[-c(1:length(jablow[,1]),)]
nowe_obserwacje <- jablow[-c(1:length(jablow[,1]),)]
nowe_obserwacje <- jablow[-c(1:length(jablow[,1])),]
obserwacja <-jablow[i,]
obserwacja <-jablow[451,]
cięcie <- strsplit(obserwacja$Event_V, "/")
ciecie <- strsplit(obserwacja$Event_V, "/")
?rep
rep(obserwacja, length(ciecie[[1]]))
data.frame(rep(obserwacja, length(ciecie[[1]])))
?rbind
wyjscie <- pusta_tabela
pusta_tabela <- jablow[-c(1:length(jablow[,1])),]
ciecie <- strsplit(obserwacja$Event_V, "/")
wyjscie <- pusta_tabela
for(item in ciecie[[1]]){
nowe <- obsererwacja
nowe$Event_V <- item
wyjscie <-rbind(wyjscie, nowe)
}
wyjscie <- pusta_tabela
for(item in ciecie[[1]]){
nowe <- obserwacja
nowe$Event_V <- item
wyjscie <-rbind(wyjscie, nowe)
}
wyjscie
obserwacja
for(i in do_pociecia){
obserwacja <- jablow[i,]
## Wyciągamy obserwację z tabeli
## Tniemy kody przelotów
## Podmianka kodów
ciecie <- strsplit(obserwacja$Event_V, "/")
wyjscie <- pusta_tabela
for(item in ciecie[[1]]){
nowe <- obserwacja
nowe$Event_V <- item
wyjscie <-rbind(wyjscie, nowe)
}
nowe_obserwacje <- rbind(nowe_obserwacje, wyjscie)
}
nowe_obserwacje
dane <- jablow[-do_pociecia,]
dane <- rbind(dane, nowe_obserwacje)
kody <- jablow$Event_V
do_pociecia <- which(regexpr("/", kody)>0)
#Tworzymy nowe puste tabele danych o tej samej iloście kolumn co dane wejsciowe
pusta_tabela <- jablow[-c(1:length(jablow[,1])),]
nowe_obserwacje <- pusta_tabela
for(i in do_pociecia){
## Wyciągamy obserwację z tabeli
obserwacja <- jablow[i,]
## Tniemy kody przelotów
ciecie <- strsplit(obserwacja$Event_V, "/")
## Podmianka kodów
wyjscie <- pusta_tabela
for(item in ciecie[[1]]){
nowe <- obserwacja
nowe$Event_V <- item
wyjscie <-rbind(wyjscie, nowe)
}
nowe_obserwacje <- rbind(nowe_obserwacje, wyjscie)
}
## Czyścimy z pociętych obserwacji
dane <- jablow[-do_pociecia,]
## Dodajemy nowe_obserwacje
dane <- rbind(dane, nowe_obserwacje)
}
source(observation_split)
jablow <- read.csv2("input/jablow_calosc.csv", as.is = TRUE)
source("function/observation_split")
source("functions/observation_split")
source("functions/observation_split.R")
jablow <- read.csv2("input/jablow_calosc.csv", as.is = TRUE)
jablow_pociete <- observation_split(jablow)
sum(which(regexpr("u", jablow_pociete$Event_V)>1)
)
sum((regexpr("u", jablow_pociete$Event_V)>1))
which(regexpr("u", jablow_pociete$Event_V)>1))
which(regexpr("u", jablow_pociete$Event_V)>1)
char <- "a"
assing(char, NULL)
assign(char, NULL)
characters  <- "a"
get(char)
for(char in characters){
assign(char, NULL)
for( i in jablow$Event_V){
get(char) <- append(get(char)length(gregexpr(char, i)[[1]],)
}
}
for(char in characters){
assign(char, NULL)
for( i in jablow$Event_V){
get(char) <- append(get(char)length(gregexpr(char, i)[[1]],)
}
}
for(char in characters){
assign(char, NULL)
for( i in jablow$Event_V){
get(char) <- append(get(char), length(gregexpr(char, i)[[1]]))
}
}
?get
?append
assign(char, append(get(char), length(gregexpr(char, i)[[1]]))
)
for(char in characters){
assign(char, NULL)
for( i in jablow$Event_V){
assign(char, append(get(char), length(gregexpr(char, i)[[1]])))
}
}
characters  <- c("a", "l")
for(char in characters){
assign(char, NULL)
for( i in jablow$Event_V){
assign(char, append(get(char), length(gregexpr(char, i)[[1]])))
}
}
l
any(l==0)
which(l==10)
jablow$Event_V[3391]
kody <- jablow$Event_V
for(char in characters){
assign(char, NULL)
for( i in kody){
assign(char, append(get(char), length(gregexpr(char, i)[[1]])))
}
}
any(a==0)
?gregexpr
length(NA)
indeksy_wystapien <- gregexpr(char, i)[[1]]
for( i in kody){
indeksy_wystapien <- gregexpr(char, i)[[1]]
assign(char, append(get(char), ifelse(indeksy_wystapien==-1,
NA, length(indeksy_wystapien))))
}
for(char in characters){
assign(char, NULL)
for( i in kody){
indeksy_wystapien <- gregexpr(char, i)[[1]]
NA, length(indeksy_wystapien))))
assign(char, append(get(char), ifelse(indeksy_wystapien==-1,
}
}
for( char in characters)
}
for(char in characters){
assign(char, NULL)
for( i in kody){
indeksy_wystapien <- gregexpr(char, i)[[1]]
assign(char, append(get(char), ifelse(indeksy_wystapien==-1,
NA, length(indeksy_wystapien))))
}
}
for( i in kody){
indeksy_wystapien <- gregexpr(char, i)[[1]]
assign(char, append(get(char), ifelse(indeksy_wystapien[1]==-1,
NA, length(indeksy_wystapien))))
}
for(char in characters){
assign(char, NULL)
for( i in kody){
indeksy_wystapien <- gregexpr(char, i)[[1]]
assign(char, append(get(char), ifelse(indeksy_wystapien[1]==-1,
NA, length(indeksy_wystapien))))
}
}
output <- get(character[1])
output <- get(characters[1])
output <- get(characters[1])
for( char in characters[-1]){
output <- cbind(output, get(char))
}
names(output <- characters)
output <- get(characters[1])
for( char in characters[-1]){
output <- cbind(output, get(char))
}
names(output) <- characters
}
View(output)
names(output) <- characters
output <- data.frame(output)
names(output) <- characters
View(output)
source("functions/count_instances.R")
kody
characters <-c("a","l","t","r","p","c","d","f","n","e")
zdarzenia <- count_instances(jablow_pociete, characters)
zdarzenia <- count_instances(jablow_pociete, characters)
source("functions/count_instances.R")
zdarzenia <- count_instances(jablow_pociete, characters)
View(zdarzenia)
sum(zdarzenia$p)
sum(zdarzenia$p, na.rm = T)
library(lubridate)
?"lubridate"
jablow$Date_time <- dmy_hms(paste(jablow$Data, jablow$Time))
source("functions/observation_split.R")
source("functions/count_instances.R")
jablow <- read.csv2("input/jablow_calosc.csv", as.is = TRUE)
jablow$Date_time <- dmy_hms(paste(jablow$Data, jablow$Time))
jablow_pociete <- observation_split(jablow)
characters <-c("a","l","t","r","p","c","d","f","n","e")
zdarzenia <- count_instances(jablow_pociete, characters)
jablow_zdarzenia <- cbind(jablow_pociete, zdarzenia)
library(dplyr)
jablow_zdarzenia <- tbl_df(jablow_zdarzenia)
jablow_zdarzenia<- group_by(jablow_zdarzenia, Season)
summarise(jablow_zdarzenia, mean(p), na.rm =T)
summarise(jablow_zdarzenia, mean(p, na.rm = TRUE))
summarise(jablow_zdarzenia, sum(p, na.rm = TRUE), length(p) )
summary <- summarise(jablow_zdarzenia, sum(p, na.rm = TRUE), length(p))
summary <- summarise(jablow_zdarzenia, sum_p =sum(p, na.rm = TRUE), n = length(p))
summary <- mutate(summary, mean_p = sum_p/n)
summary
rm(jablow)
kody <- jablow_zdarzenia$Event_V
do_pociecia <- which(regexpr("/", kody)>0)
kody[do_pociecia]
do_pociecia <- which(regexpr("u", kody)>0)
kody[do_pociecia]
?gsub
gsub("^u.","", kody)
kody2 <-kody[do_pociecia]
kody2
gsub("^u..","", kody2)
kody3 <- gsub("^u..","", kody2)
kody3<-  gsub("^u..","", kody2)
kody3<-  gsub("^u..","", kody3)
kody4 <- gsub("u..$", "", kody3)
kody4
kody5 <- gsub("u..$", "", kody4)
kody5
kody5 <- gsub("u.$", "", kody4)
kody5
kody6 <- gsub("u..", "/", kody5)
kody6
kody6 <- gsub(".u..", "/", kody5)
kody6
